{"version":3,"sources":["app/util/regex.js","app/util/validation.js","app/settings/SettingsModal.js","app/header.js","app/footer.js","app/main/batch/batch-body.js","app/main/batch/index.js","app/components/DropdownToggle.js","app/main/action/editable-cell.js","app/popover/value-extractor.popover.js","app/main/action/addon.js","app/components/ConfirmModal.js","app/popover/element-finder.popover.js","app/popover/value.popover.js","app/main/action/action-table.js","app/main/action/index.js","app/popover/start-time.popover.js","app/main/config/config-body.js","app/main/config/index.js","app/util/helper.js","app/main/configs.js","app/components/ToastHandler/index.js","app/components/Error.js","app/components/GoogleAds.js","App.js","serviceWorker.js","index.js","C:/Users/dharm/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["REGEX_NUM","REGEX_START_TIME","convertNumberField","data","NUMBER_FIELDS","field","indexOf","Number","SettingsModal","show","handleClose","useForm","mode","reValidateMode","defaultValues","defaultSetting","shouldFocusError","register","handleSubmit","errors","reset","watch","formState","isDirty","isValid","notificationSound","useState","loading","setLoading","error","setError","useEffect","StorageService","getItem","LOCAL_STORAGE_KEY","SETTINGS","then","catch","finally","_","Modal","onHide","size","Header","closeButton","Title","Body","className","Alert","variant","Heading","JSON","stringify","Card","Form","Check","id","name","ref","label","Row","Col","inline","type","value","LOAD_TYPES","WINDOW","DOCUMENT","onSubmit","setItem","md","sm","InputGroup","Prepend","Text","FormControl","placeholder","aria-label","aria-describedby","pattern","isInvalid","retry","Control","Feedback","validate","isNaN","retryInterval","xs","RETRY_OPTIONS","STOP","SKIP","RELOAD","Button","disabled","showSettings","setShowSettings","scroll","setScroll","handleScroll","window","pageYOffset","addEventListener","removeEventListener","Navbar","expand","sticky","Brand","match","src","width","height","alt","Toggle","aria-controls","Collapse","Nav","Link","href","target","onClick","Footer","version","active","BatchBody","batch","configIndex","setConfigs","configs","map","config","index","repeat","repeatInterval","React","memo","as","rel","checked","refresh","onChange","e","ElementUtil","getNameValue","currentTarget","DropdownToggle","forwardRef","children","data-toggle","preventDefault","displayName","EditableCell","initialValue","row","column","required","dataType","updateAction","setValue","invalid","setInvalid","input","useRef","current","classList","remove","test","onBlur","ValueExtractorPopover","OverlayTrigger","trigger","placement","rootClose","overlay","Popover","Content","AddonModal","defaultAddon","setShow","actionIndex","useImperativeHandle","showAddon","addon","actions","element","custom","condition","Object","entries","ADDON_CONDITIONS","key","valueExtractor","ConfirmModel","props","confirm","confirmProps","centered","backdrop","keyboard","title","message","confirmFunc","ElementFinderPopover","Table","bordered","striped","ValuePopover","ActionTable","hiddenColumns","addonRef","toastRef","setData","confirmRef","didMountRef","didUpdateRef","addAction","defaultAction","focus","defaultColumn","Cell","columns","useMemo","style","accessor","initialState","removeAction","rowIndex","filter","_action","_validateActions","forEach","action","document","querySelector","elementFinder","add","tableInstance","useTable","columnId","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setHiddenColumns","_arrayMove","arr","oldIndex","newIndex","length","k","push","undefined","splice","body","header","hover","borderless","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","align","rowId","getAttribute","moveUp","moveDown","cells","cell","getCellProps","original","bind","removeActionConfirm","defaultHiddenColumns","LocalStorage","actionTableRef","onColumnChange","_column","_index","Dropdown","alignRight","Menu","Item","data-column","StartTimePopover","ConfigBody","url","initWait","startTime","importFiled","createRef","enable","ExportService","export","bodyClass","click","accept","files","fr","FileReader","onload","_config","parse","result","_name","ImportService","import","CONFIGS","delay","onClose","location","reload","readAsText","item","htmlFor","fontSize","fontWeight","getConfigName","split","Configs","defaultConfig","selected","setSelected","_configs","checkQueryParams","object","selectedConfigIndex","search","params","replace","decodeURIComponent","findIndex","XPathIndex","removeConfig","Group","controlId","getValue","data-type","Divider","ConfirmModal","ToastHandler","list","setList","toast","headerClass","autohide","Toast","Error","GoogleAds","client","slot","format","adsbygoogle","display","data-ad-client","data-ad-slot","data-ad-format","data-full-width-responsive","App","manifest","setManifest","ManifestService","values","Container","console","Boolean","hostname","react_env","process","ReactDOM","getElementById","$","keydown","keyCode","ctrlKey","shiftKey","on","onerror","GAService","stack","args","apply","navigator","serviceWorker","ready","registration","unregister","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","protocol","ws","onmessage","event","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","close","onclose","log","removeErrorOverlay","createErrorOverlay","appendChild","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.38a84deb.chunk.993803bf.js","sourceRoot":"..","sourcesContent":["export const REGEX_NUM = /^\\d+$/\r\nexport const REGEX_START_TIME = /^\\d{2}:\\d{2}:\\d{2}:\\d{2}$/\r\n","export const convertNumberField = (data, NUMBER_FIELDS) => {\r\n  for (const field in data) {\r\n    if (NUMBER_FIELDS.indexOf(field) !== -1 && data[field].indexOf('e') === -1) {\r\n      data[field] = Number(data[field])\r\n    }\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Modal, Form, Card, InputGroup, FormControl, Row, Col, Button, Alert } from 'react-bootstrap'\r\nimport { defaultSetting, LOAD_TYPES, RETRY_OPTIONS, LOCAL_STORAGE_KEY } from '@dhruv-techapps/acf-common'\r\nimport { ReactComponent as VolumeUp } from 'bootstrap-icons/icons/volume-up.svg'\r\nimport { ReactComponent as VolumeMute } from 'bootstrap-icons/icons/volume-mute.svg'\r\nimport { StorageService } from '@dhruv-techapps/core-common'\r\nimport { Loading } from '@dhruv-techapps/core-components'\r\nimport { useForm } from 'react-hook-form'\r\nimport { REGEX_NUM } from '../util/regex'\r\nimport { convertNumberField } from '../util/validation'\r\n\r\nconst NUMBER_FIELDS = ['retry', 'retryInterval']\r\n\r\nconst SettingsModal = ({ show, handleClose }) => {\r\n  const { register, handleSubmit, errors, reset, watch, formState: { isDirty, isValid } } = useForm({\r\n    mode: 'onBlur',\r\n    reValidateMode: 'onChange',\r\n    defaultValues: defaultSetting,\r\n    shouldFocusError: true\r\n  })\r\n  const notificationSound = watch('notifications.sound')\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState()\r\n\r\n  useEffect(() => {\r\n    StorageService.getItem(LOCAL_STORAGE_KEY.SETTINGS, defaultSetting).then(reset).catch(setError).finally(_ => setLoading(false))\r\n  }, [reset])\r\n\r\n  const onSubmit = data => {\r\n    convertNumberField(data, NUMBER_FIELDS)\r\n    StorageService.setItem(LOCAL_STORAGE_KEY.SETTINGS, data).then(_ => {\r\n      reset(data)\r\n    }).catch(setError).finally(_ => setLoading(false))\r\n  }\r\n\r\n  return <Modal show={show} onHide={handleClose} size='lg'>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Settings</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      {loading ? <Loading className='d-flex justify-content-center m-5' />\r\n        : error ? <Alert variant='danger'><Alert.Heading>Error</Alert.Heading>{JSON.stringify(error)}</Alert> : <>\r\n          <Card className='mb-2'>\r\n            <Card.Body>\r\n              <Form.Check id='checkiFrames' name='checkiFrames' ref={register} label='Check IFrames' />\r\n              <small className='text-muted'>Check this box if you want to check xPath within iFrames also</small>\r\n            </Card.Body>\r\n          </Card>\r\n          <Card className='mb-2'>\r\n            <Card.Header>Show Notification</Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Check id='notifications.onError' name='notifications.onError' ref={register} label={<span>on <span className=\"text-danger\">Error</span> occured</span>}/>\r\n                  <Form.Check id='notifications.onAction' name='notifications.onAction' ref={register} label={<span>on <span className=\"text-success\">Action</span> completion</span>} />\r\n                  <Form.Check id='notifications.onBatch' name='notifications.onBatch' ref={register} label={<span>on <span className=\"text-success\">Batch</span> completion</span>} />\r\n                  <Form.Check id='notifications.onConfig' name='notifications.onConfig' ref={register} label={<span>on <span className=\"text-success\">Config</span> completion</span>} />\r\n                </Col>\r\n                <Col className=\"d-flex align-items-center\">\r\n                  <Form.Check id='notifications.sound' name='notifications.sound' ref={register} label={<span>Notification Sound {notificationSound ? <VolumeUp/> : <VolumeMute/>} </span>} />\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n          <Card className='mb-2'>\r\n            <Card.Body>\r\n                Extension load <Form.Check inline type='radio' name='loadType' id='loadTypeWindow' value={LOAD_TYPES.WINDOW} ref={register} label='Window' />\r\n              <Form.Check inline type='radio' name='loadType' id='loadTypeDocument' value={LOAD_TYPES.DOCUMENT} ref={register} label='Document' />\r\n              <small>\r\n                <ul className='mb-0 mt-2'>\r\n                  <li><span className='text-primary'>Window</span> (default) browser loads extension once all its content is loaded</li>\r\n                  <li><span className='text-primary'>Document</span> browser loads extension before scripts and images are loaded (faster)(unsafe)</li>\r\n                </ul>\r\n              </small>\r\n            </Card.Body>\r\n          </Card>\r\n          <Card className='mb-2'>\r\n            <Card.Body>\r\n              <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Row>\r\n                  <Col md={6} sm={12} className='mb-2 mb-md-0'>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text id='retry'>Retry</InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <FormControl\r\n                        placeholder='5' aria-label='5' id='retry' name='retry' aria-describedby='retry'\r\n                        ref={register({ pattern: REGEX_NUM })}\r\n                        isInvalid={errors.retry}\r\n                      />\r\n                      <Form.Control.Feedback type='invalid'>{errors.retry && 'Only valid numbers are allowed'}</Form.Control.Feedback>\r\n                    </InputGroup>\r\n                  </Col>\r\n                  <Col md={6} sm={12}>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text id='retry-interval'>Retry Interval&nbsp;<small className='text-info'>(sec)</small></InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <FormControl\r\n                        placeholder='1' aria-label='1' id='retryInterval' name='retryInterval' aria-describedby='retry-interval'\r\n                        ref={register({ validate: value => !isNaN(value) })}\r\n                        isInvalid={errors.retryInterval}\r\n                      />\r\n                      <Form.Control.Feedback type='invalid'>{errors.retryInterval && 'Only valid numbers are allowed'}</Form.Control.Feedback>\r\n                    </InputGroup>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <h6 className='my-2 text-secondary font-weight-light'><small>* Below are action which can be performed if xpath is not found by extension after retry</small></h6>\r\n                  </Col>\r\n                  <Col md={4} sm={12}>\r\n                    <Form.Check type='radio' name='retryOption' id='retryOptionStop' value={RETRY_OPTIONS.STOP} ref={register} label='Stop' />\r\n                  </Col>\r\n                  <Col md={4} sm={12}>\r\n                    <Form.Check type='radio' name='retryOption' id='retryOptionSkip' value={RETRY_OPTIONS.SKIP} ref={register} label='Skip Not Found' />\r\n                  </Col>\r\n                  <Col md={4} sm={12}>\r\n                    <Form.Check type='radio' name='retryOption' id='retryOptionReload' value={RETRY_OPTIONS.RELOAD} ref={register} label='Retry Refresh' />\r\n                  </Col>\r\n                </Row>\r\n                {isDirty && <div className='d-flex justify-content-end mt-2'>\r\n                  <Button type='submit' disabled={!isValid}>Save</Button>\r\n                </div>}\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </>}\r\n    </Modal.Body>\r\n  </Modal>\r\n}\r\n\r\nSettingsModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired\r\n}\r\nexport default SettingsModal\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Navbar, Nav, Form } from 'react-bootstrap'\r\nimport { ReactComponent as GearFill } from 'bootstrap-icons/icons/gear-fill.svg'\r\nimport SettingsModal from './settings/SettingsModal'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Header = ({ name }) => {\r\n  const [showSettings, setShowSettings] = useState(false)\r\n  const [scroll, setScroll] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setScroll(window.pageYOffset !== 0)\r\n    }\r\n\r\n    window.addEventListener('scroll', handleScroll)\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll)\r\n    }\r\n  }, [])\r\n\r\n  const handleClose = () => {\r\n    setShowSettings(false)\r\n  }\r\n\r\n  const className = `${scroll ? 'shadow' : ''}`\r\n  return <Navbar expand='lg' variant=\"light\" sticky='top' className={className}>\r\n    <Navbar.Brand className={`${name.match(/DEV/i) ? 'dev' : name.match(/BETA/i) ? 'beta' : ''}`}>\r\n      <img\r\n        src='./icon32.png'\r\n        width='30'\r\n        height='30'\r\n        className='d-inline-block align-top mr-2'\r\n        alt='Auto click Auto Fill logo'\r\n      />\r\n      {name}\r\n    </Navbar.Brand>\r\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n    <Navbar.Collapse id='basic-navbar-nav'>\r\n      <Nav className=\"mr-auto\">\r\n      </Nav>\r\n      <Form inline>\r\n        <Nav className=\"mr-2\">\r\n          <Nav.Link href='https://getautoclicker.com/docs/getting-started' target='_blank'>Documentaion</Nav.Link>\r\n          <Nav.Link href='https://getautoclicker.com/blog' target='_blank'>Blog</Nav.Link>\r\n          <Nav.Link href='https://getautoclicker.com/examples/getautoclicker.com' target='_blank'>Examples</Nav.Link>\r\n        </Nav>\r\n        <GearFill width='24' height='24' onClick={() => setShowSettings(true)} />\r\n        <SettingsModal show={showSettings} handleClose={handleClose} />\r\n      </Form>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n}\r\nHeader.propTypes = {\r\n  name: PropTypes.string.isRequired\r\n}\r\nexport default Header\r\n","import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Footer = ({ version }) => {\r\n  return <Navbar expand='lg' sticky='bottom'>\r\n    <Nav className='mr-auto'>\r\n      <Nav.Link href='mailto:dhruv.techapps@gmail.com' active>dhruv.techapps@gmail.com</Nav.Link>\r\n      <Nav.Link href='https://github.com/Dhruv-Techapps/auto-click-auto-fill/issues' target='_blank'>Issues</Nav.Link>\r\n      <Nav.Link href='https://getautoclicker.com/test' target='_blank'>Test</Nav.Link>\r\n      <Nav.Link>v{version}</Nav.Link>\r\n    </Nav>\r\n  </Navbar>\r\n}\r\nFooter.propTypes = {\r\n  version: PropTypes.string.isRequired\r\n}\r\nexport default Footer\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Card, Col, Form, FormControl, InputGroup, Row } from 'react-bootstrap'\r\nimport { useForm } from 'react-hook-form'\r\nimport { REGEX_NUM } from '../../util/regex'\r\nimport { numberWithExponential } from '../../util/prop-types'\r\nimport { convertNumberField } from '../../util/validation'\r\nconst NUMBER_FIELDS = ['repeat', 'repeatInterval']\r\nconst BatchBody = ({ batch, configIndex, setConfigs }) => {\r\n  const { register, handleSubmit, errors, reset, formState: { isDirty, isValid } } = useForm({\r\n    mode: 'onBlur',\r\n    reValidateMode: 'onChange',\r\n    defaultValues: batch,\r\n    shouldFocusError: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    reset(batch)\r\n  }, [batch, reset])\r\n\r\n  const onSubmit = data => {\r\n    convertNumberField(data, NUMBER_FIELDS)\r\n    reset(data)\r\n    setConfigs(configs => configs.map((config, index) => {\r\n      if (index === configIndex) {\r\n        config.batch = { ...config.batch, ...data }\r\n        return config\r\n      }\r\n      return config\r\n    }))\r\n  }\r\n\r\n  return <Form onSubmit={handleSubmit(onSubmit)}>\r\n    <Card.Body>\r\n      <Row>\r\n        <Col md='6' sm='12'>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id='batch-repeat'>repeat</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              name='repeat'\r\n              ref={register({ pattern: REGEX_NUM })}\r\n              isInvalid={!!errors.repeat}\r\n              placeholder='0'\r\n              aria-label='0'\r\n              aria-describedby='batch-repeat'\r\n            />\r\n            <Form.Control.Feedback type='invalid'>{errors.repeat && 'Only valid numbers are allowed'}</Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id='batch-repeat-interval'>R-Interval&nbsp;<small className='text-info'>(sec)</small></InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              name='repeatInterval'\r\n              ref={register({ validate: value => !isNaN(value) })}\r\n              isInvalid={!!errors.repeatInterval}\r\n              placeholder='0'\r\n              aria-label='0'\r\n              aria-describedby='batch-repeat-interval'\r\n            />\r\n            <Form.Control.Feedback type='invalid'>{errors.repeatInterval && 'Only valid numbers are allowed'}</Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      {isDirty && <div className='d-flex justify-content-end mt-2'>\r\n        <Button type='submit' disabled={!isValid}>Save</Button>\r\n      </div>}\r\n    </Card.Body>\r\n  </Form>\r\n}\r\nBatchBody.propTypes = {\r\n  batch: PropTypes.shape({\r\n    repeat: PropTypes.number,\r\n    repeatInterval: numberWithExponential\r\n  }),\r\n  configIndex: PropTypes.number.isRequired,\r\n  setConfigs: PropTypes.func.isRequired\r\n}\r\nexport default BatchBody\r\n","import React from 'react'\r\nimport { Card, Row, Col, Form } from 'react-bootstrap'\r\nimport { ElementUtil } from '@dhruv-techapps/core-common'\r\nimport PropTypes from 'prop-types'\r\nimport BatchBody from './batch-body'\r\nimport { numberWithExponential } from '../../util/prop-types'\r\n\r\nconst Batch = ({ batch, configIndex, setConfigs }) => {\r\n  const onChange = (e) => {\r\n    const { name, value } = ElementUtil.getNameValue(e.currentTarget)\r\n    setConfigs(configs => configs.map((config, index) => {\r\n      if (index === configIndex) {\r\n        config.batch = { ...config.batch, [name]: value }\r\n        return config\r\n      }\r\n      return config\r\n    }))\r\n  }\r\n\r\n  return <Card className='mb-3'>\r\n    <Card.Header as='h5'>\r\n      <Row>\r\n        <Col>\r\n          <a target='_blank' rel='noopener noreferrer' href='https://getautoclicker.com/docs/batch'>Batch</a>\r\n        </Col>\r\n        <Col md='auto'>\r\n          <Form.Check\r\n            type='switch'\r\n            id='batch-refresh'\r\n            label='Refresh'\r\n            name='refresh'\r\n            checked={batch.refresh}\r\n            onChange={onChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    {!batch.refresh && <BatchBody batch={batch} configIndex={configIndex} setConfigs={setConfigs} />}\r\n  </Card>\r\n}\r\n\r\nBatch.propTypes = {\r\n  batch: PropTypes.shape({\r\n    refresh: PropTypes.bool.isRequired,\r\n    repeat: PropTypes.number,\r\n    repeatInterval: numberWithExponential\r\n  }),\r\n  configIndex: PropTypes.number.isRequired,\r\n  setConfigs: PropTypes.func.isRequired\r\n}\r\nexport default React.memo(Batch)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// The forwardRef is important!!\r\n// Dropdown needs access to the DOM node in order to position the Menu\r\nexport const DropdownToggle = React.forwardRef(({ children, onClick }, ref) => {\r\n  const DropdownToggleOnclick = (e) => {\r\n    e.preventDefault()\r\n    onClick(e)\r\n  }\r\n\r\n  return <button type='button' className='btn p-1' data-toggle='dropdown' ref={ref} onClick={DropdownToggleOnclick}>{children}</button>\r\n})\r\nDropdownToggle.displayName = 'ParDropdownToggleagraph'\r\nDropdownToggle.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\n","import React, { useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap'\r\n\r\n// Create an editable cell renderer\r\nexport const EditableCell = ({ value: initialValue, data, row: { index }, column: { id, required, pattern, validate, dataType }, updateAction }) => {\r\n  // We need to keep and update the state of the cell normally\r\n// We need to keep and update the state of the cell normally\r\n  const [value, setValue] = React.useState(initialValue)\r\n  const [invalid, setInvalid] = React.useState(data[index].error === id)\r\n  const input = useRef()\r\n  const onChange = (e) => {\r\n    input.current.classList.remove('is-valid')\r\n    setInvalid(false)\r\n    const { value } = e.currentTarget\r\n    if (value) {\r\n      if (pattern && !pattern.test(value)) {\r\n        setInvalid(true)\r\n      }\r\n      if (validate && !validate(value)) {\r\n        setInvalid(true)\r\n      }\r\n    } else if (required) {\r\n      setInvalid(true)\r\n    }\r\n    setValue(value)\r\n  }\r\n\r\n  // We'll only update the external data when the input is blurred\r\n  const onBlur = (e) => {\r\n    const { value } = e.currentTarget\r\n    updateAction(index, id, dataType === 'number' && value.indexOf('e') === -1 ? Number(value) : value)\r\n  }\r\n\r\n  // If the initialValue is changed external, sync it up with our state\r\n  React.useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n\r\n  return <Form.Control ref={input} value={value} name={id} onChange={onChange} onBlur={onBlur} isInvalid={invalid} />\r\n}\r\n\r\nEditableCell.propTypes = {\r\n  data: PropTypes.array,\r\n  value: PropTypes.PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  row: PropTypes.shape({\r\n    index: PropTypes.number.isRequired\r\n  }),\r\n  column: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    required: PropTypes.bool,\r\n    pattern: PropTypes.instanceOf(RegExp),\r\n    validate: PropTypes.func,\r\n    dataType: PropTypes.string\r\n  }),\r\n  updateAction: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { OverlayTrigger, Popover } from 'react-bootstrap'\r\nimport { ReactComponent as InfoCircle } from 'bootstrap-icons/icons/info-circle.svg'\r\n\r\nexport const ValueExtractorPopover = () => <OverlayTrigger trigger=\"click\" placement=\"right\" rootClose overlay={<Popover id=\"popover-basic\">\r\n  <Popover.Title>Examples</Popover.Title>\r\n  <Popover.Content>\r\n    <ul>\r\n      <li><code>\\d+.\\d*</code> float number extract $<span className=\"text-success\">123.00</span> only</li>\r\n      <li><code>\\d+</code> number extract $<span className=\"text-success\">123</span>.00 only</li>\r\n      <li>supports regex pattern</li>\r\n    </ul>\r\n  </Popover.Content>\r\n</Popover>}><InfoCircle className=\"ml-2 text-info\"/></OverlayTrigger>\r\n","import React, { forwardRef, useImperativeHandle, useRef, useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { Modal, Form, Row, Col, Button, Alert, Card, InputGroup, FormControl } from 'react-bootstrap'\r\nimport { ADDON_CONDITIONS, defaultAddon } from '@dhruv-techapps/acf-common'\r\nimport { useForm } from 'react-hook-form'\r\nimport { REGEX_NUM } from '../../util/regex'\r\nimport { ValueExtractorPopover } from '../../popover/value-extractor.popover'\r\nimport { convertNumberField } from '../../util/validation'\r\n\r\nconst NUMBER_FIELDS = ['retry', 'retryInterval']\r\n\r\nconst AddonModal = forwardRef(({ configIndex, setConfigs }, ref) => {\r\n  const { register, handleSubmit, errors, reset, formState: { isDirty } } = useForm({\r\n    mode: 'onBlur',\r\n    reValidateMode: 'onChange',\r\n    defaultValues: { ...defaultAddon },\r\n    shouldFocusError: true\r\n  })\r\n  const [show, setShow] = useState(false)\r\n  const actionIndex = useRef(-1)\r\n\r\n  const onSubmit = data => {\r\n    convertNumberField(data, NUMBER_FIELDS)\r\n    reset(data)\r\n    setConfigs(configs => configs.map((config, index) => {\r\n      if (index === configIndex) {\r\n        config.actions[actionIndex.current].addon = { ...data }\r\n        return { ...config }\r\n      }\r\n      return config\r\n    }))\r\n    setShow(false)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    showAddon (index, addon) {\r\n      actionIndex.current = index\r\n      reset({ ...addon })\r\n      setShow(true)\r\n    }\r\n  }))\r\n\r\n  const handleClose = () => { setShow(false) }\r\n\r\n  return <Modal show={show} size='lg' onHide={handleClose}>\r\n    <Form onSubmit={handleSubmit(onSubmit)}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Addon</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Alert variant=\"info\">Add condition will be checked before executing Action</Alert>\r\n        <Card>\r\n          <Card.Body>\r\n            <Row className=\"mb-2\">\r\n              <Col>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text id='addon-element'>Element Finder <small className=\"text-danger\">*</small></InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control type='text' placeholder='Element Finder' aria-label='Element Finder' aria-describedby='addon-element' name='elementFinder' ref={register({ required: true })} isInvalid={!!errors.element} />\r\n                  <Form.Control.Feedback type='invalid'>{errors.element && 'Element is required'}</Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Col>\r\n              <Col>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text id='addon-condition'>Condition <small className=\"text-danger\">*</small></InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control as='select' aria-describedby='addon-condition' custom ref={register({ required: true })} isInvalid={!!errors.condition} name='condition'>\r\n                    {Object.entries(ADDON_CONDITIONS).map((condition, index) => <option key={index} value={condition[1]}>{condition[0]}</option>)}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type='invalid'>{errors.condition && 'Condition is required'}</Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text id='addon-value'>Value <small className=\"text-danger\">*</small></InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control type='text' placeholder='Value' aria-label='Value' aria-describedby='addon-value' ref={register({ required: true })} isInvalid={!!errors.value} name='value' />\r\n                  <Form.Control.Feedback type='invalid'>{errors.value && 'Value is required'}</Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Col>\r\n              <Col>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text id='addon-value-extractor'>Value Extractor&nbsp;<ValueExtractorPopover/></InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control type='text' placeholder='Value Extractor' aria-label='Value Extractor' name='valueExtractor' aria-describedby='addon-value-extractor' ref={register()} isInvalid={!!errors.valueExtractor} />\r\n                  <Form.Control.Feedback type='invalid'>{errors.valueExtractor && 'Not a valid regex'}</Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n            <hr/>\r\n            <Row>\r\n              <Col>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text id='addon-retry'>Retry</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    placeholder='0' aria-label='0' name='retry' aria-describedby='addon-retry'\r\n                    ref={register({ pattern: REGEX_NUM })}\r\n                    isInvalid={errors.retry}\r\n                  />\r\n                  <Form.Control.Feedback type='invalid'>{errors.retry && 'Only valid numbers are allowed'}</Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Col>\r\n              <Col >\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text id='addon-retry-interval'>Retry Interval&nbsp;<small className='text-info'>(sec)</small></InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    placeholder='0' aria-label='0' id='addon-retryInterval' name='retryInterval' aria-describedby='retry-interval'\r\n                    ref={register({ validate: value => !isNaN(value) })}\r\n                    isInvalid={errors.retryInterval}\r\n                  />\r\n                  <Form.Control.Feedback type='invalid'>{errors.retryInterval && 'Only valid numbers are allowed'}</Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Modal.Body>\r\n      {isDirty && <Modal.Footer>\r\n        <Button type='submit'>Save</Button>\r\n      </Modal.Footer>}\r\n    </Form>\r\n  </Modal>\r\n})\r\n\r\nAddonModal.propTypes = {\r\n  configIndex: PropTypes.number.isRequired,\r\n  setConfigs: PropTypes.func.isRequired\r\n}\r\nexport default React.memo(AddonModal)\r\n","import React, { forwardRef, useImperativeHandle, useRef, useState } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nconst ConfirmModel = forwardRef((props, ref) => {\r\n  const [show, setShow] = useState(false)\r\n  const confirm = useRef({})\r\n  useImperativeHandle(ref, () => ({\r\n    confirm (confirmProps) {\r\n      confirm.current = confirmProps\r\n      setShow(true)\r\n    }\r\n  }))\r\n\r\n  const noClick = () => {\r\n    setShow(false)\r\n  }\r\n\r\n  const yesClick = () => {\r\n    confirm.current.confirmFunc()\r\n    setShow(false)\r\n  }\r\n\r\n  return <Modal show={show} centered backdrop='static' keyboard={false}>\r\n    <Modal.Body className='mx-auto text-center'>\r\n      <h4 className='my-3'>{confirm.current.title || 'Confirm'}</h4>\r\n      {confirm.current.message}\r\n    </Modal.Body>\r\n    <Modal.Footer>\r\n      <Button variant='secondary' className='px-3 mr-3' size='md' onClick={noClick}>No</Button>\r\n      <Button variant='primary' className='px-3' size='md' onClick={yesClick}>Yes</Button>\r\n    </Modal.Footer>\r\n  </Modal>\r\n})\r\nexport default ConfirmModel\r\n","import React from 'react'\r\nimport { OverlayTrigger, Popover, Table } from 'react-bootstrap'\r\nimport { ReactComponent as InfoCircle } from 'bootstrap-icons/icons/info-circle.svg'\r\n\r\nexport const ElementFinderPopover = () => <OverlayTrigger trigger=\"click\" rootClose placement=\"right\" overlay={<Popover id=\"popover-basic\" >\r\n  <Popover.Content>\r\n  &lt;input type=&quot;password&quot; name=&quot;login&quot; id=&quot;username&quot; class=&quot;form-control test&quot; readonly disabled&gt;\r\n    <Table bordered striped className=\"mt-3\">\r\n      <thead>\r\n        <tr>\r\n          <th>getElementBy</th>\r\n          <th>Element Finder</th>\r\n          <th># of elements</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById\" target=\"_blank\" rel=\"noopener noreferrer\">getElementById</a></td>\r\n          <td>\r\n            <code>#username</code><br/>\r\n            <code>Id::username</code>\r\n          </td>\r\n          <td>1</td>\r\n        </tr>\r\n        <tr>\r\n          <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\" target=\"_blank\" rel=\"noopener noreferrer\">getElementsByClassName</a></td>\r\n          <td>\r\n            <code>ClassName::form-control test</code>\r\n          </td>\r\n          <td>&gt;1</td>\r\n        </tr>\r\n        <tr>\r\n          <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName\" target=\"_blank\" rel=\"noopener noreferrer\">getElementsByName</a></td>\r\n          <td><code>Name::login</code></td>\r\n          <td>&gt;1</td>\r\n        </tr>\r\n        <tr>\r\n          <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByTagName\" target=\"_blank\" rel=\"noopener noreferrer\">getElementsByTagName</a></td>\r\n          <td><code>TagName::input</code></td>\r\n          <td>&gt;1</td>\r\n        </tr>\r\n        <tr>\r\n          <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\" target=\"_blank\" rel=\"noopener noreferrer\">querySelector</a></td>\r\n          <td>\r\n            <code>Selector::input</code><br/>\r\n            <code>Selector::input[type]</code><br/>\r\n            <code>Selector::input[disabled]</code><br/>\r\n            <code>Selector::input[type=&apos;password&apos;]</code><br/>\r\n            <code>Selector::input[name=&apos;login&apos;]</code><br/>\r\n            <code>Selector::input#username</code><br/>\r\n            <code>Selector::input.form-control.test</code><br/>\r\n          </td>\r\n          <td>1</td>\r\n        </tr>\r\n        <tr>\r\n          <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\" target=\"_blank\" rel=\"noopener noreferrer\">querySelectorAll</a></td>\r\n          <td><code>SelectorAll::input</code></td>\r\n          <td>&gt;1</td>\r\n        </tr>\r\n        <tr>\r\n          <td><a href=\"https://getautoclicker.com/docs/xpath\" target=\"_blank\" rel=\"noopener noreferrer\">XPath</a></td>\r\n          <td><code>&#47;&#47;input[contains(@class,&apos;test&apos;)]</code></td>\r\n          <td>&gt;1</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table></Popover.Content>\r\n</Popover>}><InfoCircle className=\"ml-2 text-info\"/></OverlayTrigger>\r\n","import React from 'react'\r\nimport { OverlayTrigger, Popover, Table } from 'react-bootstrap'\r\nimport { ReactComponent as InfoCircle } from 'bootstrap-icons/icons/info-circle.svg'\r\n\r\nexport const ValuePopover = () => <OverlayTrigger trigger=\"click\" placement=\"right\" rootClose overlay={<Popover id=\"popover-basic\" >\r\n  <Popover.Content>\r\n    <Table bordered striped className=\"mt-3\">\r\n      <tbody>\r\n        <tr>\r\n          <td><a href=\"https://getautoclicker.com/docs/action#scroll-to-examples\" target=\"_blank\" rel=\"noopener noreferrer\">Scroll To</a></td>\r\n          <td><code>ScrollTo::Bottom</code></td>\r\n        </tr>\r\n        <tr>\r\n          <td><a href=\"https://getautoclicker.com/docs/action#click-events-examples\" target=\"_blank\" rel=\"noopener noreferrer\">Click Events</a></td>\r\n          <td><code>ClickEvents::dblclick</code></td>\r\n        </tr>\r\n        <tr>\r\n          <td><a href=\"https://getautoclicker.com/docs/action#form-events-examples\" target=\"_blank\" rel=\"noopener noreferrer\">Form Events</a></td>\r\n          <td><code>FormEvents::submit</code></td>\r\n        </tr>\r\n        <tr>\r\n          <td><a href=\"https://getautoclicker.com/docs/action#exec-command-examples\" target=\"_blank\" rel=\"noopener noreferrer\">Exec Command</a></td>\r\n          <td><code>ExecCommand::[&quot;cut&quot;,&quot;paste&quot;]</code></td>\r\n        </tr>\r\n        <tr>\r\n          <td><a href=\"https://getautoclicker.com/docs/action#location-command-examples\" target=\"_blank\" rel=\"noopener noreferrer\">Location Command</a></td>\r\n          <td><code>LocationCommand::href::https://getautoclicker.com</code></td>\r\n        </tr>\r\n        <tr>\r\n          <td>Plain text</td>\r\n          <td><code>Hello World</code></td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  </Popover.Content>\r\n</Popover>}><InfoCircle className=\"ml-2 text-info\"/></OverlayTrigger>\r\n","import React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './action-table.scss'\r\n\r\nimport { useTable } from 'react-table'\r\nimport { Button, Form, Table } from 'react-bootstrap'\r\n\r\nimport { ReactComponent as XCircle } from 'bootstrap-icons/icons/x-circle.svg'\r\nimport { ReactComponent as CodeSlash } from 'bootstrap-icons/icons/code-slash.svg'\r\nimport { ReactComponent as CaretUp } from 'bootstrap-icons/icons/caret-up.svg'\r\nimport { ReactComponent as CaretDown } from 'bootstrap-icons/icons/caret-down.svg'\r\n\r\nimport { EditableCell } from './editable-cell'\r\nimport AddonModal from './addon'\r\nimport { REGEX_NUM } from '../../util/regex'\r\nimport ConfirmModel from '../../components/ConfirmModal'\r\nimport { ElementFinderPopover } from '../../popover/element-finder.popover'\r\nimport { ValuePopover } from '../../popover/value.popover'\r\nimport { numberWithExponential } from '../../util/prop-types'\r\nimport { defaultAction } from '@dhruv-techapps/acf-common'\r\n\r\nconst ActionTable = forwardRef(({ actions, configIndex, setConfigs, hiddenColumns, addonRef, toastRef }, ref) => {\r\n  const [data, setData] = useState(actions)\r\n  const [error, setError] = useState()\r\n  const confirmRef = useRef()\r\n  const didMountRef = useRef(true)\r\n  const didUpdateRef = useRef(false)\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    addAction () {\r\n      setData([...data, { ...defaultAction, focus: true }])\r\n      didUpdateRef.current = true\r\n    }\r\n  }))\r\n\r\n  useEffect(() => {\r\n    if (didMountRef.current) {\r\n      didMountRef.current = false\r\n      return\r\n    }\r\n    setData(actions)\r\n  }, [actions])\r\n\r\n  // Set our editable cell renderer as the default Cell renderer\r\n  const defaultColumn = {\r\n    Cell: EditableCell\r\n  }\r\n\r\n  const columns = React.useMemo(() => [\r\n    {\r\n      Header: 'Init Wait',\r\n      style: { width: '90px' },\r\n      accessor: 'initWait',\r\n      dataType: 'number',\r\n      validate: value => !isNaN(value)\r\n    }, {\r\n      Header: 'Name',\r\n      style: { width: '90px' },\r\n      accessor: 'name'\r\n    }, {\r\n      Header: 'Element Finder',\r\n      accessor: 'elementFinder',\r\n      required: true\r\n    }, {\r\n      Header: 'Value',\r\n      accessor: 'value'\r\n    }, {\r\n      Header: 'Repeat',\r\n      style: { width: '90px' },\r\n      accessor: 'repeat',\r\n      dataType: 'number',\r\n      pattern: REGEX_NUM\r\n    }, {\r\n      Header: 'R-Interval',\r\n      style: { width: '100px' },\r\n      accessor: 'repeatInterval',\r\n      dataType: 'number',\r\n      validate: value => !isNaN(value)\r\n    }\r\n  ], [])\r\n\r\n  const initialState = { hiddenColumns }\r\n\r\n  const updateAction = (rowIndex, columnId, value) => {\r\n    setData(actions => actions.map((action, index) => {\r\n      if (index === rowIndex) {\r\n        return { ...action, [columnId]: value }\r\n      }\r\n      return action\r\n    }))\r\n    didUpdateRef.current = true\r\n  }\r\n\r\n  const removeAction = (rowIndex) => {\r\n    setData(actions => actions.filter((_action, index) => index !== rowIndex))\r\n    didUpdateRef.current = true\r\n  }\r\n\r\n  const saveActions = (e) => {\r\n    e.preventDefault()\r\n    setError()\r\n    if (_validateActions()) {\r\n      setConfigs(configs => configs.map((config, index) => {\r\n        if (index === configIndex) {\r\n          config.actions = [...data]\r\n          return config\r\n        }\r\n        return config\r\n      }))\r\n      didUpdateRef.current = false\r\n      toastRef.current.push({\r\n        body: <p><span className=\"badge badge-success\">actions</span> saved successfully !</p>,\r\n        header: <strong className='mr-auto'>Actions</strong>\r\n      })\r\n    } else {\r\n      setError('Element Finder cant be empty')\r\n    }\r\n  }\r\n\r\n  const _validateActions = () => {\r\n    let isValid = true\r\n    data.forEach((action, index) => {\r\n      document.querySelector(`#actions tbody tr:nth-child(${index + 1}) input[name=elementFinder]`).classList.remove('is-invalid')\r\n      if (!action.elementFinder) {\r\n        document.querySelector(`#actions tbody tr:nth-child(${index + 1}) input[name=elementFinder]`).classList.add('is-invalid')\r\n        isValid = false\r\n      }\r\n    })\r\n    return isValid\r\n  }\r\n\r\n  const removeActionConfirm = (rowIndex) => {\r\n    const name = `#${+rowIndex + 1} - ${data[rowIndex].name || data[rowIndex].elementFinder || 'row'}`\r\n    confirmRef.current.confirm({\r\n      title: 'Remove Action',\r\n      message: <p>Are you sure to remove <span className='codecode-danger'>{name}</span> Action?</p>,\r\n      confirmFunc: removeAction.bind(null, Number(rowIndex))\r\n    })\r\n  }\r\n\r\n  const tableInstance = useTable({ columns, data, defaultColumn, initialState, updateAction })\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, setHiddenColumns } = tableInstance\r\n\r\n  useEffect(() => {\r\n    if (didMountRef.current) {\r\n      didMountRef.current = false\r\n      return\r\n    }\r\n    setHiddenColumns(hiddenColumns)\r\n  }, [hiddenColumns, setHiddenColumns])\r\n\r\n  const showAddon = (row) => {\r\n    addonRef.current.showAddon(row.id, row.original.addon)\r\n  }\r\n\r\n  const _arrayMove = (arr, oldIndex, newIndex) => {\r\n    if (newIndex >= arr.length) {\r\n      var k = newIndex - arr.length + 1\r\n      while (k--) {\r\n        arr.push(undefined)\r\n      }\r\n    }\r\n    arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0])\r\n    return arr // for testing\r\n  }\r\n\r\n  const moveUp = (e, rowId) => {\r\n    if (e.currentTarget.getAttribute('disabled') === null) {\r\n      setData(actions => [..._arrayMove(actions, +rowId, rowId - 1)])\r\n      didUpdateRef.current = true\r\n    }\r\n  }\r\n  const moveDown = (e, rowId) => {\r\n    if (e.currentTarget.getAttribute('disabled') === null) {\r\n      setData(actions => [..._arrayMove(actions, +rowId, +rowId + 1)])\r\n      didUpdateRef.current = true\r\n    }\r\n  }\r\n  return <Form onSubmit={saveActions}>\r\n    <Table hover {...getTableProps()} id='actions' borderless>\r\n      <thead>\r\n        {headerGroups.map((headerGroup, index) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()} key={index}>\r\n            <th style={{ width: '30px' }} />\r\n            {headerGroup.headers.map((column, index) => (\r\n              <th {...column.getHeaderProps([{ style: column.style }])} key={index}>\r\n                {column.render('Header')} {column.required && <small className=\"text-danger\">*</small>}\r\n                {column.Header === 'Element Finder' && <ElementFinderPopover/>}\r\n                {column.Header === 'Value' && <ValuePopover/>}\r\n              </th>\r\n            ))}\r\n            <th style={{ width: '80px' }} />\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, index) => {\r\n          prepareRow(row)\r\n          return (<tr {...row.getRowProps()} key={index}>\r\n            <td align='center'>\r\n              <div className='d-flex flex-column align-items-center'>\r\n                <CaretUp width='20' height='20' onClick={(e) => moveUp(e, row.id)} disabled={index === 0}/>\r\n                <CaretDown width='20' height='20' onClick={(e) => moveDown(e, row.id)} disabled={index === rows.length - 1}/>\r\n              </div>\r\n            </td>\r\n            {row.cells.map((cell, index) => (\r\n              <td {...cell.getCellProps()} key={index}>\r\n                {cell.render('Cell')}\r\n              </td>\r\n            ))}\r\n            <td align='center'>\r\n              <CodeSlash className='text-primary mr-3' width='20' height='20' onClick={() => showAddon(row)} />\r\n              <Button variant='link' className='p-0' onClick={() => { removeActionConfirm(row.id) }} disabled={data.length === 1}>\r\n                <XCircle className={'x-circle ' + (data.length === 1 ? 'text-muted' : 'text-danger')} width='20' height='20' />\r\n              </Button>\r\n            </td>\r\n          </tr>)\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n    {didUpdateRef.current && <div className='d-flex justify-content-end align-items-center mt-2'>\r\n      <span className=\"text-danger mr-3\">{error}</span>\r\n      <Button type='submit'>Save</Button>\r\n    </div>}\r\n    <ConfirmModel ref={confirmRef} />\r\n  </Form>\r\n})\r\n\r\nActionTable.propTypes = {\r\n  actions: PropTypes.arrayOf(PropTypes.shape({\r\n    elementFinder: PropTypes.string.isRequired,\r\n    initWait: PropTypes.number,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    repeat: PropTypes.number,\r\n    repeatInterval: numberWithExponential,\r\n    addon: AddonModal.type.propTypes.addon\r\n  }).isRequired).isRequired,\r\n  didUpdateRef: PropTypes.shape({\r\n    current: PropTypes.bool\r\n  }),\r\n  toastRef: PropTypes.shape({ current: PropTypes.shape({ push: PropTypes.func.isRequired }) }).isRequired,\r\n  addonRef: PropTypes.shape({ current: PropTypes.shape({ showAddon: PropTypes.func.isRequired }) }).isRequired,\r\n  configIndex: PropTypes.number.isRequired,\r\n  setConfigs: PropTypes.func.isRequired,\r\n  hiddenColumns: PropTypes.arrayOf(PropTypes.string)\r\n}\r\nexport default ActionTable\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Card, Row, Col, Dropdown, Button } from 'react-bootstrap'\r\nimport { ReactComponent as FilterRight } from 'bootstrap-icons/icons/filter-right.svg'\r\nimport { DropdownToggle } from '../../components/DropdownToggle'\r\nimport { LocalStorage } from '@dhruv-techapps/core-common'\r\nimport ActionTable from './action-table.js'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst HIDDEN_COLUMN_KEY = 'hiddenColumns'\r\nconst defaultHiddenColumns = ['name', 'initWait', 'repeat', 'repeatInterval']\r\n\r\nconst Action = ({ actions, configIndex, setConfigs, addonRef, toastRef }) => {\r\n  const [hiddenColumns, setHiddenColumns] = useState(LocalStorage.getItem(HIDDEN_COLUMN_KEY, defaultHiddenColumns))\r\n  const actionTableRef = useRef()\r\n  const didMountRef = useRef(true)\r\n\r\n  const onColumnChange = (e) => {\r\n    const column = e.currentTarget.getAttribute('data-column')\r\n    const index = hiddenColumns.indexOf(column)\r\n    setHiddenColumns(hiddenColumns => index !== -1 ? hiddenColumns.filter((_column, _index) => _index !== index) : [...hiddenColumns, column])\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (didMountRef.current) {\r\n      didMountRef.current = false\r\n      return\r\n    }\r\n    LocalStorage.setItem(HIDDEN_COLUMN_KEY, hiddenColumns)\r\n  }, [hiddenColumns])\r\n\r\n  return <Card>\r\n    <Card.Header as='h5'>\r\n      <Row>\r\n        <Col className='d-flex align-items-center'>\r\n          <a target='_blank' rel='noopener noreferrer' href='https://getautoclicker.com/docs/action'>Action</a>\r\n        </Col>\r\n        <Col md='auto' className='d-flex align-items-center'>\r\n          <Button variant='success' onClick={() => { actionTableRef.current.addAction() }}>Add Action</Button>\r\n          <Dropdown alignRight className='ml-2'>\r\n            <Dropdown.Toggle as={DropdownToggle}>\r\n              <FilterRight width='28' height='28' />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={onColumnChange} data-column='name' active={hiddenColumns.indexOf('name') === -1}>Name</Dropdown.Item>\r\n              <Dropdown.Item onClick={onColumnChange} data-column='initWait' active={hiddenColumns.indexOf('initWait') === -1}>Init Wait</Dropdown.Item>\r\n              <Dropdown.Item onClick={onColumnChange} data-column='repeat' active={hiddenColumns.indexOf('repeat') === -1}>Repeat</Dropdown.Item>\r\n              <Dropdown.Item onClick={onColumnChange} data-column='repeatInterval' active={hiddenColumns.indexOf('repeatInterval') === -1}>R-interval</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <ActionTable ref={actionTableRef} toastRef={toastRef} actions={actions} configIndex={configIndex} setConfigs={setConfigs} hiddenColumns={hiddenColumns} addonRef={addonRef} />\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nAction.propTypes = {\r\n  actions: ActionTable.propTypes.actions,\r\n  configIndex: PropTypes.number.isRequired,\r\n  setConfigs: PropTypes.func.isRequired,\r\n  addonRef: ActionTable.propTypes.addonRef,\r\n  toastRef: ActionTable.propTypes.toastRef\r\n}\r\nexport default React.memo(Action)\r\n","import React from 'react'\r\nimport { OverlayTrigger, Popover } from 'react-bootstrap'\r\nimport { ReactComponent as InfoCircle } from 'bootstrap-icons/icons/info-circle.svg'\r\n\r\nexport const StartTimePopover = () => <OverlayTrigger trigger=\"click\" placement=\"right\" rootClose overlay={<Popover id=\"popover-basic\">\r\n  <Popover.Title>Examples</Popover.Title>\r\n  <Popover.Content>\r\n    <ul>\r\n      <li><code>13:00:00:00</code> at afternoon 1 PM</li>\r\n      <li><code>00:00:00:00</code> at midnight 12 AM</li>\r\n      <li><code>15:15:15:15</code> at afternoon 3 PM and 15 mins and 15 seconds and 15 milliseconds</li>\r\n      <li><code>empty blank</code> start immediately</li>\r\n    </ul>\r\n  </Popover.Content>\r\n</Popover>}><InfoCircle className=\"ml-2 text-info\"/></OverlayTrigger>\r\n","import React, { useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Card, Col, Form, FormControl, InputGroup, Row } from 'react-bootstrap'\r\nimport { useForm } from 'react-hook-form'\r\nimport { REGEX_START_TIME } from '../../util/regex'\r\nimport { StartTimePopover } from '../../popover/start-time.popover'\r\nimport { numberWithExponential } from '../../util/prop-types'\r\nimport { convertNumberField } from '../../util/validation'\r\nconst NUMBER_FIELDS = ['initWait']\r\nconst ConfigBody = ({ config, configIndex, setConfigs }) => {\r\n  const didMountRef = useRef(true)\r\n  const { register, handleSubmit, errors, reset, formState: { isDirty, isValid } } = useForm({\r\n    mode: 'onBlur',\r\n    reValidateMode: 'onChange',\r\n    defaultValues: config,\r\n    shouldFocusError: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (didMountRef.current) {\r\n      didMountRef.current = false\r\n      return\r\n    }\r\n    reset(config)\r\n  }, [config, reset])\r\n\r\n  const onSubmit = data => {\r\n    convertNumberField(data, NUMBER_FIELDS)\r\n    reset(data)\r\n    setConfigs(configs => configs.map((config, index) => {\r\n      if (index === configIndex) {\r\n        return { ...config, ...data }\r\n      }\r\n      return config\r\n    }))\r\n  }\r\n\r\n  return <Form onSubmit={handleSubmit(onSubmit)}>\r\n    <Card.Body>\r\n      <Row>\r\n        <Col md='5' sm='12'>\r\n          <InputGroup className='mb-2'>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id='config-name'>Name</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl name='name' ref={register} placeholder='getautoclicker.com' aria-label='getautoclicker.com' aria-describedby='config-name' />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col md='7' sm='12'>\r\n          <InputGroup className='mb-2'>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id='config-url'>URL&nbsp;<small className='text-danger'>*</small></InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              name='url' ref={register({ required: true })}\r\n              isInvalid={!!errors.url}\r\n              placeholder='https://getautoclicker.com/' aria-label='https://getautoclicker.com/' aria-describedby='config-url'\r\n            />\r\n            <Form.Control.Feedback type='invalid'>{errors.url && 'URL is required'}</Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Col>\r\n        <Col md='5' sm='12'>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id='config-init-wait'>Init Wait&nbsp;<small className='text-info'>(sec)</small></InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              ref={register({ validate: value => !isNaN(value) })}\r\n              isInvalid={!!errors.initWait} name='initWait' placeholder='0' aria-label='0' aria-describedby='config-init-wait'\r\n            />\r\n            <Form.Control.Feedback type='invalid'>{errors.initWait && 'Only valid numbers are allowed'}</Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Col>\r\n        <Col md='7' sm='12'>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id='config-start-time'>Start Time&nbsp;<StartTimePopover/></InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              ref={register({ pattern: REGEX_START_TIME })}\r\n              isInvalid={!!errors.startTime}\r\n              name='startTime' placeholder='hh:mm:ss:ms' aria-label='hh:mm:ss:ms' aria-describedby='config-start-time'\r\n            />\r\n            <Form.Control.Feedback type='invalid'>{errors.startTime && 'Start time should matcg hh:mm:ss format'}</Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      {isDirty && <div className='d-flex justify-content-end mt-2'>\r\n        <Button type='submit' disabled={!isValid}>Save</Button>\r\n      </div>}\r\n    </Card.Body>\r\n  </Form>\r\n}\r\nConfigBody.propTypes = {\r\n  configIndex: PropTypes.number.isRequired,\r\n  setConfigs: PropTypes.func.isRequired,\r\n  config: PropTypes.shape({\r\n    enable: PropTypes.bool.isRequired,\r\n    name: PropTypes.string,\r\n    url: PropTypes.string,\r\n    initWait: numberWithExponential,\r\n    startTime: PropTypes.string\r\n  }).isRequired\r\n}\r\nexport default ConfigBody\r\n","import React, { createRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './config.scss'\r\nimport Batch from '../batch'\r\nimport Action from '../action'\r\n\r\nimport { Card, Form, Row, Col, Dropdown } from 'react-bootstrap'\r\nimport { ReactComponent as ThreeDotsVertical } from 'bootstrap-icons/icons/three-dots-vertical.svg'\r\nimport { DropdownToggle } from '../../components/DropdownToggle'\r\nimport { ExportService, ImportService, ElementUtil } from '@dhruv-techapps/core-common'\r\nimport { LOCAL_STORAGE_KEY } from '@dhruv-techapps/acf-common'\r\nimport ConfigBody from './config-body'\r\nimport { numberWithExponential } from '../../util/prop-types'\r\nconst Config = ({ config, configIndex, toastRef, setConfigs }) => {\r\n  const importFiled = createRef()\r\n  const onChange = (e) => {\r\n    const { name, value } = ElementUtil.getNameValue(e.currentTarget)\r\n    setConfigs(configs => configs.map((config, index) => {\r\n      if (index === configIndex) {\r\n        return { ...configs[configIndex], [name]: value }\r\n      }\r\n      return config\r\n    }))\r\n  }\r\n\r\n  const exportConfig = () => {\r\n    ExportService.export(config.name || config.url || `configuration-${configIndex}`, config).catch(error => {\r\n      toastRef.current.push({\r\n        body: JSON.stringify(error),\r\n        header: <strong className='mr-auto'>Export Error</strong>,\r\n        bodyClass: 'text-danger'\r\n      })\r\n    })\r\n  }\r\n\r\n  const importConfig = (e) => {\r\n    var files = e.currentTarget.files\r\n    if (files.length <= 0) {\r\n      return false\r\n    }\r\n    var fr = new FileReader()\r\n    fr.onload = function (e) {\r\n      try {\r\n        const _config = JSON.parse(e.target.result)\r\n        const _name = _config.name || _config.url || 'configuration'\r\n        ImportService.import(_config, LOCAL_STORAGE_KEY.CONFIGS)\r\n        toastRef.current.push({\r\n          body: <p><span className=\"badge badge-success\">{_name}</span> imported successfully!</p>,\r\n          header: <strong className='mr-auto'>Configuration</strong>,\r\n          delay: 2000,\r\n          onClose: () => { window.location.reload() }\r\n        })\r\n      } catch (error) {\r\n        toastRef.current.push({\r\n          body: JSON.stringify(error),\r\n          header: <strong className='mr-auto'>Import Error</strong>,\r\n          bodyClass: 'text-danger'\r\n        })\r\n      }\r\n    }\r\n    fr.readAsText(files.item(0))\r\n  }\r\n\r\n  return <Card className='mb-3'>\r\n    <Card.Header as='h5'>\r\n      <Row>\r\n        <Col className='d-flex align-items-center'>\r\n          <a target='_blank' rel='noopener noreferrer' href='https://getautoclicker.com/docs/configuration'>Configuration</a>\r\n        </Col>\r\n        <Col md='auto' className='d-flex align-items-center'>\r\n          <Form.Check type='switch' name='enable' id='config-enable' label='Enable' checked={config.enable} onChange={onChange} />\r\n          <Dropdown className='ml-3' alignRight>\r\n            <Dropdown.Toggle as={DropdownToggle}>\r\n              <ThreeDotsVertical width='24' height='24' />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item href='#/action-1' onClick={exportConfig}>Export</Dropdown.Item>\r\n              <Dropdown.Item href='#/action-2' onClick={_ => importFiled.current.click()}>Import</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <div className=\"custom-file d-none\">\r\n            <input type=\"file\" className=\"custom-file-input\" ref={importFiled} accept=\".json\" id=\"import-configuration\" onChange={importConfig} />\r\n            <label className=\"custom-file-label\" htmlFor=\"import-configuration\" style={{ fontSize: 1 + 'rem', fontWeight: 400 }}>Import</label>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    {config.enable && <ConfigBody config={config} configIndex={configIndex} setConfigs={setConfigs} />}\r\n  </Card>\r\n}\r\n\r\nConfig.propTypes = {\r\n  configIndex: PropTypes.number.isRequired,\r\n  setConfigs: PropTypes.func.isRequired,\r\n  toastRef: Action.type.propTypes.toastRef,\r\n  config: PropTypes.shape({\r\n    enable: PropTypes.bool.isRequired,\r\n    name: PropTypes.string,\r\n    url: PropTypes.string,\r\n    initWait: numberWithExponential,\r\n    startTime: PropTypes.string,\r\n    batch: Batch.type.propTypes.batch,\r\n    actions: Action.type.propTypes.actions\r\n  }).isRequired\r\n}\r\nexport default React.memo(Config)\r\n","/* eslint no-void: 0 */\r\n\r\nexport const getConfigName = (url, index) => {\r\n  let name = `configuration-${index}`\r\n  if (url && url.match('://.*') !== null) {\r\n    name = url.split('/')[2]\r\n  } else if (url) {\r\n    name = url\r\n  }\r\n  return name\r\n}\r\n\r\nexport const disableContextMenu = () => {\r\n  window.$(document).keydown(function (e) {\r\n    return e.keyCode !== 123 && ((!e.ctrlKey || !e.shiftKey || e.keyCode !== 73) && void 0)\r\n  })\r\n  window.$(document).on('contextmenu', function (e) {\r\n    e.preventDefault()\r\n  })\r\n}\r\n","import React, { createRef, useEffect, useRef, useState } from 'react'\r\n\r\nimport Config from './config'\r\nimport Batch from './batch'\r\nimport Action from './action'\r\nimport AddonModal from './action/addon'\r\n\r\nimport { Row, Col, Button, Form, Dropdown, Alert, Card } from 'react-bootstrap'\r\nimport { ReactComponent as ThreeDotsVertical } from 'bootstrap-icons/icons/three-dots-vertical.svg'\r\n\r\nimport { defaultAction, defaultConfig, LOCAL_STORAGE_KEY } from '@dhruv-techapps/acf-common'\r\nimport { StorageService, ExportService, ElementUtil } from '@dhruv-techapps/core-common'\r\nimport { Loading } from '@dhruv-techapps/core-components'\r\n\r\nimport { DropdownToggle } from '../components/DropdownToggle'\r\nimport { getConfigName } from '../util/helper'\r\nimport ConfirmModal from '../components/ConfirmModal'\r\n\r\nconst Configs = ({ toastRef }) => {\r\n  const [configs, setConfigs] = useState([{ ...defaultConfig }])\r\n  const [selected, setSelected] = useState(0)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState()\r\n  const config = configs[selected]\r\n  const didMountRef = useRef(true)\r\n  const addonRef = useRef()\r\n  const confirmRef = useRef()\r\n  const importFiled = createRef()\r\n\r\n  useEffect(() => {\r\n    StorageService.getItem(LOCAL_STORAGE_KEY.CONFIGS, [{ ...defaultConfig, name: '' }]).then(_configs => {\r\n      setSelected(checkQueryParams(_configs))\r\n      setConfigs(_configs)\r\n    }).catch(setError).finally(_ => setLoading(false))\r\n  }, [])\r\n\r\n  const checkQueryParams = (configs) => {\r\n    const object = {}\r\n    let selectedConfigIndex = 0\r\n    if (window.location.search) {\r\n      const params = window.location.search.replace('?', '').split('&')\r\n      for (const index in params) {\r\n        const [name, value] = params[index].split('=')\r\n        object[name] = decodeURIComponent(value)\r\n      }\r\n      if (object.url) {\r\n        selectedConfigIndex = configs.findIndex(config => config.url === object.url)\r\n        if (selectedConfigIndex === -1 && object.elementFinder) {\r\n          const config = { ...defaultConfig, name: 'getautoclicker.com' }\r\n          config.url = object.url\r\n          config.actions[0].elementFinder = object.elementFinder\r\n          configs.push(config)\r\n          selectedConfigIndex = configs.length - 1\r\n        } else if (object.error) {\r\n          const XPathIndex = configs[selectedConfigIndex].actions.findIndex(action => action.elementFinder === object.elementFinder)\r\n          if (XPathIndex !== -1) {\r\n            configs[selectedConfigIndex].actions[XPathIndex].error = 'elementFinder'\r\n          }\r\n        } else if (object.elementFinder) {\r\n          const XPathIndex = configs[selectedConfigIndex].actions.findIndex(action => action.elementFinder === object.elementFinder)\r\n          if (XPathIndex === -1) {\r\n            const action = { ...defaultAction }\r\n            action.elementFinder = object.elementFinder\r\n            configs[selectedConfigIndex].actions.push(action)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return selectedConfigIndex\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (didMountRef.current) {\r\n      didMountRef.current = false\r\n      return\r\n    }\r\n    StorageService.setItem(LOCAL_STORAGE_KEY.CONFIGS, configs).catch(setError).finally(_ => setLoading(false))\r\n  }, [configs])\r\n\r\n  const onChange = (e) => {\r\n    setSelected(ElementUtil.getValue(e.currentTarget))\r\n  }\r\n\r\n  const addConfig = () => {\r\n    const name = getConfigName(undefined, configs.length)\r\n    setConfigs([...configs, { ...defaultConfig, name }])\r\n    toastRef.current.push({\r\n      body: <p><span className='badge badge-success'>{name}</span> added successfully </p>,\r\n      header: <strong className='mr-auto'>Configuration</strong>\r\n    })\r\n  }\r\n\r\n  const removeConfig = () => {\r\n    const name = configs[selected].name\r\n    setLoading(true)\r\n    setConfigs(configs.filter((_config, index) => index !== selected))\r\n    setSelected(selected => configs.length === 2 ? 0 : selected === 0 ? selected : selected - 1)\r\n    setLoading(false)\r\n    toastRef.current.push({\r\n      body: <p><span className='badge badge-danger'>{name}</span> removed successfully</p>,\r\n      header: <strong className='mr-auto'>Configuration</strong>\r\n    })\r\n  }\r\n\r\n  const removeConfigConfirm = () => {\r\n    const name = configs[selected].name || configs[selected].url || `configuration-${selected}`\r\n    confirmRef.current.confirm({\r\n      title: 'Remove Configuration',\r\n      message: <p>Are you sure to remove <span className='badge badge-danger'>{name}</span> Configuration?</p>,\r\n      confirmFunc: removeConfig\r\n    })\r\n  }\r\n\r\n  const exportAll = () => {\r\n    ExportService.export('All Configurations', configs).catch(error => {\r\n      toastRef.current.push({\r\n        body: JSON.stringify(error),\r\n        header: <strong className='mr-auto'>Export Error</strong>,\r\n        bodyClass: 'text-danger'\r\n      })\r\n    })\r\n  }\r\n\r\n  const importAll = (e) => {\r\n    var files = e.currentTarget.files\r\n    if (files.length <= 0) {\r\n      return false\r\n    }\r\n    var fr = new FileReader()\r\n    fr.onload = function (e) {\r\n      try {\r\n        setLoading(true)\r\n        setConfigs(JSON.parse(e.target.result))\r\n        setSelected(0)\r\n        setLoading(false)\r\n      } catch (error) {\r\n        toastRef.current.push({\r\n          body: JSON.stringify(error),\r\n          header: <strong className='mr-auto'>Import Error</strong>,\r\n          bodyClass: 'text-danger'\r\n        })\r\n      }\r\n    }\r\n    fr.readAsText(files.item(0))\r\n  }\r\n\r\n  return <>\r\n    {loading ? <Loading className='d-flex justify-content-center m-5' />\r\n      : error ? <Alert variant='danger'><Alert.Heading>Error</Alert.Heading>{JSON.stringify(error)}</Alert> : <>\r\n        <Card className='mb-3'>\r\n          <Card.Body>\r\n            <Row >\r\n              <Col>\r\n                <Form>\r\n                  <Form.Group controlId='selected' className='mb-0'>\r\n                    <Form.Control as='select' custom onChange={onChange} value={selected} data-type='number'>\r\n                      {configs.map((config, index) => <option key={index} value={index}>{config.name || getConfigName(config.url, index)}</option>)}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n              <Col md='auto' className='d-flex align-items-center'>\r\n                <Button type='button' variant='success' onClick={addConfig}>Add Configuration</Button>\r\n                <Dropdown className='ml-3' alignRight>\r\n                  <Dropdown.Toggle as={DropdownToggle} id='dropdown-basic'>\r\n                    <ThreeDotsVertical width='24' height='24' />\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={exportAll}>Export All</Dropdown.Item>\r\n                    <Dropdown.Item onClick={_ => importFiled.current.click()}>Import All</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item onClick={removeConfigConfirm} className={configs.length === 1 ? 'text-muted' : 'text-danger'} disabled={configs.length === 1}>Remove Configuration</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n                <div className=\"custom-file d-none\">\r\n                  <input type=\"file\" className=\"custom-file-input\" ref={importFiled} accept=\".json\" id=\"import-configurations\" onChange={importAll} />\r\n                  <label className=\"custom-file-label\" htmlFor=\"import-configurations\" style={{ fontSize: 1 + 'rem', fontWeight: 400 }}>Import All</label>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n        <Config config={config} configIndex={selected} toastRef={toastRef} setConfigs={setConfigs} />\r\n        <ConfirmModal ref={confirmRef} />\r\n        {config.enable && <>\r\n          <Batch batch={config.batch} configIndex={selected} setConfigs={setConfigs} />\r\n          <Action actions={config.actions} configIndex={selected} toastRef={toastRef} setConfigs={setConfigs} addonRef={addonRef} />\r\n          <AddonModal ref={addonRef} configIndex={selected} setConfigs={setConfigs} />\r\n        </>}\r\n      </>}\r\n  </>\r\n}\r\nConfigs.propTypes = {\r\n  toastRef: Action.type.propTypes.toastRef\r\n}\r\nexport default Configs\r\n","import React, { useState, forwardRef, useImperativeHandle } from 'react'\r\nimport './ToastHandler.scss'\r\nimport { Toast } from 'react-bootstrap'\r\n\r\nconst ToastHandler = forwardRef((props, ref) => {\r\n  const [list, setList] = useState([])\r\n\r\n  const close = (selected) => {\r\n    setList(list => list.map((toast, index) => {\r\n      if (index === selected) {\r\n        return { ...toast[selected], show: false }\r\n      }\r\n      return toast\r\n    }))\r\n  }\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    push (toast) {\r\n      setList([toast, ...list])\r\n    }\r\n  }))\r\n\r\n  return <div className='toast-handler'>\r\n    {list.map(({ body, header, bodyClass, headerClass, delay = 5000, autohide = true, show = true, onClose }, index) => {\r\n      return <Toast key={index} onClose={() => { close(index); onClose && onClose(index) }} show={show} delay={delay} autohide={autohide}>\r\n        <Toast.Header className={headerClass}>{header}</Toast.Header>\r\n        <Toast.Body className={bodyClass}>{body}</Toast.Body>\r\n      </Toast>\r\n    })}\r\n  </div>\r\n})\r\nToastHandler.displayName = 'ToastHandler'\r\nexport default ToastHandler\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport const Error = ({ error, className }) => {\r\n  return <Alert variant=\"danger\" className={className}>\r\n    <Alert.Heading>Error</Alert.Heading>\r\n    {JSON.stringify(error)}\r\n  </Alert>\r\n}\r\nError.propTypes = {\r\n  className: PropTypes.string,\r\n  error: PropTypes.any.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GoogleAds = ({ client, slot, format }) => {\r\n  useEffect(() => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      (window.adsbygoogle = window.adsbygoogle || []).push({})\r\n    }\r\n  }, [])\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return (\r\n      <ins\r\n        className='adsbygoogle'\r\n        style={{ display: 'block' }}\r\n        data-ad-client={client}\r\n        data-ad-slot={slot}\r\n        data-ad-format={format}\r\n        data-full-width-responsive='true'\r\n      />\r\n    )\r\n  }\r\n  return <></>\r\n}\r\nGoogleAds.propTypes = {\r\n  client: PropTypes.string.isRequired,\r\n  slot: PropTypes.string.isRequired,\r\n  format: PropTypes.string.isRequired\r\n}\r\nexport default GoogleAds\r\n","import React, { useEffect, useRef, useState } from 'react'\nimport './App.scss'\nimport Header from './app/header'\nimport Footer from './app/footer'\nimport Configs from './app/main/configs'\nimport ToastHandler from './app/components/ToastHandler'\nimport { Container } from 'react-bootstrap'\nimport { ManifestService } from '@dhruv-techapps/core-common'\nimport { Error } from './app/components/Error'\nimport GoogleAds from './app/components/GoogleAds'\n\nfunction App () {\n  const toastRef = useRef()\n  const [manifest, setManifest] = useState()\n  const [error, setError] = useState()\n\n  useEffect(() => {\n    ManifestService.values(['name', 'version']).then(setManifest).catch(error => {\n      setError(error)\n      if (error.message === 'Could not establish connection. Receiving end does not exist.') {\n        window.location.href = 'https://getautoclicker.com/'\n      }\n    })\n  }, [])\n\n  try {\n    return <Container>\n      {error ? <Error error={error} className=\"mt-5\"/> : manifest && <>\n        <Header name={manifest.name}/>\n        <main>\n          <Configs toastRef={toastRef} />\n        </main>\n        <Footer version={manifest.version} />\n        <ToastHandler ref={toastRef} />\n      </>}\n      <GoogleAds client=\"ca-pub-9512495707028343\" slot=\"4304175895\" format=\"auto\"/>\n    </Container>\n  } catch (error) {\n    console.error(',ers', error)\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { disableContextMenu } from './app/util/helper'\nimport { GAService } from '@dhruv-techapps/core-common'\n\nwindow.react_env = process.env\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nif (process.env.NODE_ENV !== 'development') {\n  disableContextMenu()\n}\nwindow.onerror = function (message) {\n  GAService.error({ name: 'OptionsPageError', stack: message })\n}\n\nconsole.error = (function () {\n  const { error } = console\n  return function (...args) {\n    GAService.error({ name: 'OptionsPageError', stack: args[0] })\n    error.apply(console, args)\n  }\n}())\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}